SUBS(text_pv, "Peter Vassilatos", KC_P, KC_V)

SUBS(prg_print, "print(", KC_KP_DOT, KC_P)
SUBS(prg_return, "return", KC_KP_DOT, KC_R)
SUBS(prg_import, "import", KC_KP_DOT, KC_T)
SUBS(prg_with, "with open(", KC_KP_DOT, KC_O)
SUBS(prg_main, "if __name__ == '__main__':", KC_KP_DOT, KC_F)

COMB( combo_lbadge,     KC_HASH,        KC_O,    KC_DOT, KC_U)
COMB( combo_rbadge,     KC_ASTERISK,    KC_H,    KC_C, KC_N)
COMB( combo_lcbr,       KC_LCBR,        KC_COMM, KC_N)
COMB( combo_rcbr,       KC_RCBR,        KC_O,    KC_R)
COMB( combo_lbrc,       KC_LBRC,        KC_DOT,  KC_T)
COMB( combo_rbrc,       KC_RBRC,        KC_E,    KC_C)
COMB( combo_lprn,       KC_LPRN,        KC_P,    KC_H)
COMB( combo_rprn,       KC_RPRN,        KC_U,    KC_G)
COMB( combo_bang,       KC_EXCLAIM,     KC_O,    KC_P)
COMB( combo_del,        KC_DEL,         KC_G,    KC_C)
COMB( combo_bspc,       KC_BSPC,        KC_H,    KC_T)
COMB( combo_quot,       KC_QUOT ,       KC_U,    KC_H)
COMB( combo_dubquot,    KC_DQUO ,       KC_E,    KC_T)
COMB( combo_colon,      KC_COLON ,      KC_O,    KC_U)
COMB( combo_semicolon,  KC_SCLN ,       KC_COMM, KC_U)
COMB( combo_semicolon2, KC_SCLN ,       KC_DOT,  KC_U)
COMB( combo_dash,       KC_MINUS ,      KC_N,    KC_T, KC_H)
COMB( combo_underscore, KC_UNDERSCORE , KC_V,    KC_T, KC_H)
COMB( combo_equals,     KC_EQUAL ,      KC_R,    KC_T, KC_H)
COMB( combo_slash,      KC_SLASH ,      KC_R,    KC_H)
COMB( combo_backslash,  KC_BACKSLASH ,  KC_N,    KC_G)
COMB( combo_a,          KC_A ,          KC_U,    KC_BSPC)
COMB( combo_a2,         KC_A ,          KC_O,    KC_E)
COMB( combo_a3,         KC_A ,          KC_U,    KC_SPC)
COMB( combo_z,          KC_Z ,          KC_N,    KC_SPC)
COMB( combo_tab,        KC_TAB ,        KC_E,    KC_U)
COMB( combo_tab2,       KC_TAB ,        KC_T,    KC_V)
COMB( combo_esc,        KC_ESC ,        KC_DOT,  KC_P)
COMB( combo_esc2,       KC_ESC ,        KC_H,    KC_N)
COMB( combo_caps,       KC_CAPS ,       KC_Y,    KC_F)

COMB( combo_pgup,       KC_PGUP ,       KC_3,    KC_4)
COMB( combo_pgdn,       KC_PGDN ,       KC_DOWN, KC_K)
COMB( combo_home,       KC_HOME ,       KC_LEFT, KC_UP)
COMB( combo_end,        KC_END ,        KC_UP,   KC_RIGHT)

COMB( combo_enter,      KC_ENTER,       KC_H,   KC_V)
COMB( combo_space,      KC_SPACE,       KC_T,   KC_N)

COMB( combo_rec1,     DM_REC1,        KC_1,   KC_R, KC_SPACE)
COMB( combo_rec2,     DM_REC2,        KC_2,   KC_R, KC_SPACE)
COMB( combo_stop,     DM_RSTP,        KC_ESC, KC_R, KC_SPACE)
COMB( combo_play1,     DM_PLY1,        KC_1,   KC_H, KC_SPACE)
COMB( combo_play2,     DM_PLY2,        KC_2,   KC_H, KC_SPACE)


COMB( combo_numpgup,       KC_PGUP ,       KC_4,    KC_5)
COMB( combo_numpgdn,       KC_PGDN ,       KC_1,    KC_2)
COMB( combo_numhome,       KC_HOME ,       KC_5,    KC_6)
COMB( combo_numend,        KC_END ,        KC_2,    KC_3)

COMB( combo_bt1,        BT_HST1 ,        KC_ESC,    KC_1)
COMB( combo_bt2,        BT_HST2 ,        KC_ESC,    KC_2)
COMB( combo_bt3,        BT_HST3 ,        KC_ESC,    KC_3)
//COMB( combo_togfn2,     TG(FN2),         KC_H,      KC_T,    KC_N,    KC_SPC)
